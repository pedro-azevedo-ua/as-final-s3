{
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information"
        }
    },
    "RabbitMQ": {
        "HostName": "localhost",
        "Port": 5672,
        "UserName": "user",
        "Password": "password",
        "VirtualHost": "/",
        "EventsExchange": "cms.events",
        "RequestsExchange": "cms.requests",
        "DeadLetterExchange": "cms.dlx",
        "EventsQueue": "cms.event.notifications",
        "RequestsQueue": "cms.requests.processor",
        "DeadLetterQueue": "cms.dlq",
        "PublishRoutingKey": "page.published",
        "DeleteRoutingKey": "page.deleted",
        "DraftRoutingKey": "page.draft",
        "RequestRoutingKey": "page.*.request",
        "AutomaticRecoveryEnabled": true,
        "TopologyRecoveryEnabled": true,
        "RequestedHeartbeat": 30, // seconds
        "RequestedConnectionTimeout": 60000, // ms
        "ClientProvidedName": "PiranhaCMS", // Optional: for identifying connections in RabbitMQ UI
        "PrefetchCount": 10, // Optional: for consumer QoS
        "MessageTTL": 60000 // Optional: ms, for expiring old messages
    },


    "AllowedHosts": "*",
    "ConnectionStrings": {
        "piranha": "Filename=./piranha.db",
        "blobstorage": "DefaultEndpointsProtocol=https;AccountName=;AccountKey=;EndpointSuffix="
    },

    "Serilog": {
        "Using": [
            "Serilog.Sinks.File",
            "Serilog.Settings.Configuration",
            "Serilog.Expressions"
        ],
        "MinimumLevel": {
            "Default": "Information",
            "Override": {
                "Microsoft": "Warning",
                "System": "Warning"
            }
        },
        "Enrich": [ "FromLogContext" ],
        "WriteTo": [

            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "SourceContext = 'Eventing.Listener'"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/Listener/listener-.log",
                                    "rollingInterval": "Day",
                                    "restrictedToMinimumLevel": "Information",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] ({SourceContext}) {Message}{NewLine}{Exception}"
                                }
                            }
                        ]
                    }
                }
            },

            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "SourceContext = 'Eventing.DLQ'"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/DLQ/dlq-.log",
                                    "rollingInterval": "Day",
                                    "restrictedToMinimumLevel": "Information",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] ({SourceContext}) {Message}{NewLine}{Exception}"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "SourceContext = 'Eventing.Publisher'"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/Publisher/Publisher-.log",
                                    "rollingInterval": "Day",
                                    "restrictedToMinimumLevel": "Information",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] ({SourceContext}) {Message}{NewLine}{Exception}"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "SourceContext = 'Eventing.Publisher'"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/Events/events-.log",
                                    "restrictedToMinimumLevel": "Information",
                                    "filters": [
                                        {
                                            "Name": "ByIncludingOnly",
                                            "Args": {
                                                "expression": "SourceContext like '%Eventing%'"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },

            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "SourceContext = 'Eventing.Publisher'"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/DLQ/dlq-.log",
                                    "restrictedToMinimumLevel": "Information",
                                    "rollingInterval": "Day",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] ({SourceContext}) {Message}{NewLine}{Exception}",
                                    "filters": [
                                        {
                                            "Name": "ByIncludingOnly",
                                            "Args": {
                                                "expression": "SourceContext = 'Eventing.DLQ'"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        ]
    },
                  
    "Security": {
        "MessageSigningKey": "as-2025-123951"
    }


}
